{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "hostingPlanName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat('hostingPlan', resourceGroup().name)]"
    },
    "skuName": {
      "type": "string",
      "defaultValue": "F1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ]
    },
    "skuCapacity": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1
    },
    "sqlAdministratorLogin": {
      "defaultValue": "[concat('l', uniqueString(resourceGroup().id, '9A08DDB9-95A1-495F-9263-D89738ED4205'))]",
      "type": "String"
    },
    "sqlAdministratorLoginPassword": {
      "defaultValue":
        "[concat('P', uniqueString(resourceGroup().id, deployment().name, '224F5A8B-51DB-46A3-A7C8-59B0DD584A41'), 'x', '!')]",
      "type": "SecureString"
    },
    "databaseName": {
      "defaultValue": "resourceGroup().name",
      "type": "string"
    },
    "collation": {
      "type": "string",
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
    },
    "edition": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ]
    },
    "maxSizeBytes": {
      "type": "string",
      "defaultValue": "1073741824"
    },
    "requestedServiceObjectiveName": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "S0",
        "S1",
        "S2",
        "P1",
        "P2",
        "P3"
      ],
      "metadata": {
        "description": "Describes the performance level for Edition"
      }
    },
    "nameTraining": {
      "type": "string",
      "defaultValue": "ProdIdentCustomVision"
    },
    "skuTraining": {
      "type": "string",
      "defaultValue": "F0",
      "allowedValues": [
        "F0",
        "S0"
      ]
    },
    "skuPrediction": {
      "type": "string",
      "defaultValue": "F0",
      "allowedValues": [
        "F0",
        "S0"
      ]
    }
  },
  "variables": {
    "webSiteName": "[concat('webSite-', resourceGroup().name)]",
    "sqlserverName": "[concat('sqlserver-', resourceGroup().name)]",
    "namePrediction": "[concat(take(replace(parameters('nameTraining'),'-',''), 18), '_Prediction')]",
    "nameTraining": "[concat(take(replace(parameters('nameTraining'),'-',''), 18), '_Training')]"
  },
  "resources": [
    //{
    //      "apiVersion": "2014-04-01",
    //      "name": "[concat('ServerErrors ', variables('webSiteName'))]",
    //      "type": "Microsoft.Insights/alertrules",
    //      "location": "[resourceGroup().location]",
    //      "dependsOn": [
    //        "[resourceId('Microsoft.Web/sites/', variables('webSiteName'))]"
    //      ],
    //      "tags": {
    //        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('webSiteName'))]": "Resource",
    //        "displayName": "ServerErrorsAlertRule"
    //      },
    //      "properties": {
    //        "name": "[concat('ServerErrors ', variables('webSiteName'))]",
    //        "description": "[concat(variables('webSiteName'), ' has some server errors, status code 5xx.')]",
    //        "isEnabled": false,
    //        "condition": {
    //          "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
    //          "dataSource": {
    //            "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
    //            "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('webSiteName'))]",
    //            "metricName": "Http5xx"
    //          },
    //          "operator": "GreaterThan",
    //          "threshold": 0.0,
    //          "windowSize": "PT5M"
    //        },
    //        "action": {
    //          "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
    //          "sendToServiceOwners": true,
    //          "customEmails": []
    //        }
    //      }
    //    },
    //    {
    //      "apiVersion": "2014-04-01",
    //      "name": "[concat('ForbiddenRequests ', variables('webSiteName'))]",
    //      "type": "Microsoft.Insights/alertrules",
    //      "location": "[resourceGroup().location]",
    //      "dependsOn": [
    //        "[resourceId('Microsoft.Web/sites/', variables('webSiteName'))]"
    //      ],
    //      "tags": {
    //        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('webSiteName'))]": "Resource",
    //        "displayName": "ForbiddenRequestsAlertRule"
    //      },
    //      "properties": {
    //        "name": "[concat('ForbiddenRequests ', variables('webSiteName'))]",
    //        "description": "[concat(variables('webSiteName'), ' has some requests that are forbidden, status code 403.')]",
    //        "isEnabled": false,
    //        "condition": {
    //          "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
    //          "dataSource": {
    //            "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
    //            "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('webSiteName'))]",
    //            "metricName": "Http403"
    //          },
    //          "operator": "GreaterThan",
    //          "threshold": 0,
    //          "windowSize": "PT5M"
    //        },
    //        "action": {
    //          "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
    //          "sendToServiceOwners": true,
    //          "customEmails": []
    //        }
    //      }
    //    },
    //    {
    //      "apiVersion": "2014-04-01",
    //      "name": "[concat('CPUHigh ', parameters('hostingPlanName'))]",
    //      "type": "Microsoft.Insights/alertrules",
    //      "location": "[resourceGroup().location]",
    //      "dependsOn": [
    //        "[resourceId('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
    //      ],
    //      "tags": {
    //        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "Resource",
    //        "displayName": "CPUHighAlertRule"
    //      },
    //      "properties": {
    //        "name": "[concat('CPUHigh ', parameters('hostingPlanName'))]",
    //        "description": "[concat('The average CPU is high across all the instances of ', parameters('hostingPlanName'))]",
    //        "isEnabled": false,
    //        "condition": {
    //          "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
    //          "dataSource": {
    //            "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
    //            "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
    //            "metricName": "CpuPercentage"
    //          },
    //          "operator": "GreaterThan",
    //          "threshold": 90,
    //          "windowSize": "PT15M"
    //        },
    //        "action": {
    //          "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
    //          "sendToServiceOwners": true,
    //          "customEmails": []
    //        }
    //      }
    //    },
    //    {
    //      "apiVersion": "2014-04-01",
    //      "name": "[concat('insights-', variables('webSiteName'))]",
    //      "type": "Microsoft.Insights/components",
    //      "location": "[resourceGroup().location]",
    //      "dependsOn": [
    //        "[resourceId('Microsoft.Web/sites/', variables('webSiteName'))]"
    //      ],
    //      "tags": {
    //        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('webSiteName'))]": "Resource",
    //        "displayName": "AppInsightsComponent"
    //      },
    //      "properties": {
    //        "ApplicationId": "[variables('webSiteName')]"
    //      }
    //    },
    {
      "type": "Microsoft.Web/serverfarms",
      "sku": {
        "name": "[parameters('skuName')]",
        "capacity": "[parameters('skuCapacity')]"
      },
      "kind": "app",
      "name": "[parameters('hostingPlanName')]",
      "apiVersion": "2016-09-01",
      "location": "[resourceGroup().location]",
      "scale": null,
      "properties": {
        "name": "[parameters('hostingPlanName')]",
        "workerTierName": null,
        "adminSiteName": null,
        "hostingEnvironmentProfile": null,
        "perSiteScaling": false,
        "reserved": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Web/sites",
      "kind": "app",
      "name": "[variables('webSiteName')]",
      "apiVersion": "2016-08-01",
      "location": "[resourceGroup().location]",
      "scale": null,
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(variables('webSiteName'),'.azurewebsites.net')]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Standard"
          },
          {
            "name": "[concat(variables('webSiteName'),'.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",
        "reserved": false,
        "siteConfig": null,
        "scmSiteAlsoStopped": false,
        "hostingEnvironmentProfile": null,
        "clientAffinityEnabled": true,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "cloningInfo": null,
        "httpsOnly": false,
        "DBConnection": {
          "value": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', parameters('databaseName'), ';User Id=', parameters('sqlAdministratorLogin'), '@', reference(concat('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ';Password=', parameters('sqlAdministratorLoginPassword'), ';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;ConnectRetryCount=10;')]",
          "type": "SQLAzure"
        },
        //"Storage": {
        //  "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('videoStorageAccountName')),'2018-07-01').keys[0].value)]",
        //  "type": "Custom"
        //},
        "appSettings": [
          {
            "name": "AppSettings.CustomVisionPredictionKey",
            "value": "[listKeys(variables('namePrediction'),'2016-02-01-preview').key1]"
          },
          {
            "name": "AppSettings.CustomVisionPredictionId",
            "value": ""
          },
          {
            "name": "AppSettings.CustomVisionProjectId",
            "value": ""
          },
          {
            "name": "AppSettings.CustomVisionTrainingKey",
            "value": "[listKeys(parameters('nameTraining'),'2016-02-01-preview').key1]"
          }
        ]
},
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",
        "[resourceId('Microsoft.Sql/servers/databases', variables('sqlserverName'), parameters('databaseName'))]",
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('namePrediction'), parameters('databaseName'))]",
        "[resourceId('Microsoft.CognitiveServices/accounts', parameters('nameTraining'), parameters('databaseName'))]" //,
        //"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Sql/servers",
      "kind": "v12.0",
      "name": "[variables('sqlserverName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "scale": null,
      "properties": {
        "administratorLogin": "[parameters('sqlAdministratorLogin')]",
        "administratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]",
        "version": "12.0"
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Sql/servers/databases",
      "sku": {
        "name": "Basic",
        "tier": "Basic"
      },
      "kind": "v12.0,user",
      "name": "[concat(variables('sqlserverName'), '/', parameters('databaseName'))]",
      "apiVersion": "2017-03-01-preview",
      "location": "[resourceGroup().location]",
      "scale": null,
      "properties": {
        "collation": "SQL_Latin1_General_CP1_CI_AS",
        "maxSizeBytes": 104857600,
        "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
        "zoneRedundant": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('sqlserverName'))]"
      ]
    },
    {
      "apiVersion": "2016-02-01-preview",
      "name": "[parameters('nameTraining')]",
      "type": "Microsoft.CognitiveServices/accounts",
      "location": "[resourceGroup().location]",
      "kind": "CustomVision.Training",
      "sku": {
        "name": "[parameters('skuTraining')]"
      },
      "properties": {}
    },
    {
      "apiVersion": "2016-02-01-preview",
      "name": "[variables('namePrediction')]",
      "type": "Microsoft.CognitiveServices/accounts",
      "location": "[resourceGroup().location]",
      "kind": "CustomVision.Prediction",
      "sku": {
        "name": "[parameters('skuPrediction')]"
      },
      "properties": {}
    }
  ]
}