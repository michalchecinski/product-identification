{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "webSiteName": {
      "type": "string"
    },
    "webHostingPlanName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat('hostingPlan', resourceGroup().name)]"
    },
    "skuName": {
      "type": "string",
      "defaultValue": "F1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ]
    },
    "skuCapacity": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1
    },
    "sqlserverName": { "type": "string" },
    "sqlAdministratorLogin": {
      "defaultValue": "[concat('l', uniqueString(resourceGroup().id, '9A08DDB9-95A1-495F-9263-D89738ED4205'))]",
      "type": "string"
    },
    "sqlAdministratorLoginPassword": {
      "defaultValue": "[concat('P', uniqueString(resourceGroup().id, deployment().name, '224F5A8B-51DB-46A3-A7C8-59B0DD584A41'), 'x', '!')]",
      "type": "SecureString"
    },
    "databaseName": {
      "defaultValue": "resourceGroup().name",
      "type": "string"
    },
    "collation": {
      "type": "string",
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
    },
    "edition": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ]
    },
    "maxSizeBytes": {
      "type": "string",
      "defaultValue": "1073741824"
    },
    "requestedServiceObjectiveName": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "S0",
        "S1",
        "S2",
        "P1",
        "P2",
        "P3"
      ],
      "metadata": {
        "description": "Describes the performance level for Edition"
      }
    },
    "nameTraining": {
      "type": "string"
    },
    "namePrediction": {
      "type": "string"
    },
    "skuTraining": {
      "type": "string",
      "defaultValue": "F0",
      "allowedValues": [
        "F0",
        "S0"
      ]
    },
    "skuPrediction": {
      "type": "string",
      "defaultValue": "S0",
      "allowedValues": [
        "F0",
        "S0"
      ]
    },
    "CustomVisionProjectId": { "type": "string" },
    "functionAppName": { "type": "string" },
    "functionStorageAccountName": { "type": "string" },
    "functionStorageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [ "Standard_LRS", "Standard_GRS", "Standard_RAGRS" ],
      "metadata": {
        "description": "Function storage Account type"
      }
    }
  },
  "variables": {
    "functionsHostingPlanName": "[parameters('functionAppName')]",
    "functionApplicationInsightsName": "[concat('insights-', parameters('functionAppName'))]",
    "functionStorageAccountName": "[tolower(take(concat('stor', replace(string.delNumbers(parameters('functionAppName')),'-','')),24))]",
    "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('functionStorageAccountName'))]",
    "CustomVisionPredictionId": "[concat(resourcegroup().id ,'/providers/Microsoft.CognitiveServices/accounts/', parameters('namePrediction'))]"
  },
  "functions": [
    {
      "namespace": "string",
      "members": {
        "delNumbers": {
          "parameters": [
            {
              "name": "stringToDel",
              "type": "string"
            }
          ],
          "output": {
            "type": "string",
            "value": "[replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(parameters('stringToDel'),'1',''),'2',''),'3',''),'4',''),'5',''),'6',''),'7',''),'8',''),'9',''),'0','')]"
          }
        }
      }
    }
  ],
  "resources": [
    //{
    //      "apiVersion": "2014-04-01",
    //      "name": "[concat('ServerErrors ', parameters('webSiteName'))]",
    //      "type": "Microsoft.Insights/alertrules",
    //      "location": "[resourceGroup().location]",
    //      "dependsOn": [
    //        "[resourceId('Microsoft.Web/sites/', parameters('webSiteName'))]"
    //      ],
    //      "tags": {
    //        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('webSiteName'))]": "Resource",
    //        "displayName": "ServerErrorsAlertRule"
    //      },
    //      "properties": {
    //        "name": "[concat('ServerErrors ', parameters('webSiteName'))]",
    //        "description": "[concat(parameters('webSiteName'), ' has some server errors, status code 5xx.')]",
    //        "isEnabled": false,
    //        "condition": {
    //          "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
    //          "dataSource": {
    //            "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
    //            "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('webSiteName'))]",
    //            "metricName": "Http5xx"
    //          },
    //          "operator": "GreaterThan",
    //          "threshold": 0.0,
    //          "windowSize": "PT5M"
    //        },
    //        "action": {
    //          "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
    //          "sendToServiceOwners": true,
    //          "customEmails": []
    //        }
    //      }
    //    },
    //    {
    //      "apiVersion": "2014-04-01",
    //      "name": "[concat('ForbiddenRequests ', parameters('webSiteName'))]",
    //      "type": "Microsoft.Insights/alertrules",
    //      "location": "[resourceGroup().location]",
    //      "dependsOn": [
    //        "[resourceId('Microsoft.Web/sites/', parameters('webSiteName'))]"
    //      ],
    //      "tags": {
    //        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('webSiteName'))]": "Resource",
    //        "displayName": "ForbiddenRequestsAlertRule"
    //      },
    //      "properties": {
    //        "name": "[concat('ForbiddenRequests ', parameters('webSiteName'))]",
    //        "description": "[concat(parameters('webSiteName'), ' has some requests that are forbidden, status code 403.')]",
    //        "isEnabled": false,
    //        "condition": {
    //          "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
    //          "dataSource": {
    //            "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
    //            "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('webSiteName'))]",
    //            "metricName": "Http403"
    //          },
    //          "operator": "GreaterThan",
    //          "threshold": 0,
    //          "windowSize": "PT5M"
    //        },
    //        "action": {
    //          "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
    //          "sendToServiceOwners": true,
    //          "customEmails": []
    //        }
    //      }
    //    },
    //    {
    //      "apiVersion": "2014-04-01",
    //      "name": "[concat('CPUHigh ', parameters('webHostingPlanName'))]",
    //      "type": "Microsoft.Insights/alertrules",
    //      "location": "[resourceGroup().location]",
    //      "dependsOn": [
    //        "[resourceId('Microsoft.Web/serverfarms/', parameters('webHostingPlanName'))]"
    //      ],
    //      "tags": {
    //        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('webHostingPlanName'))]": "Resource",
    //        "displayName": "CPUHighAlertRule"
    //      },
    //      "properties": {
    //        "name": "[concat('CPUHigh ', parameters('webHostingPlanName'))]",
    //        "description": "[concat('The average CPU is high across all the instances of ', parameters('webHostingPlanName'))]",
    //        "isEnabled": false,
    //        "condition": {
    //          "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
    //          "dataSource": {
    //            "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
    //            "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('webHostingPlanName'))]",
    //            "metricName": "CpuPercentage"
    //          },
    //          "operator": "GreaterThan",
    //          "threshold": 90,
    //          "windowSize": "PT15M"
    //        },
    //        "action": {
    //          "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
    //          "sendToServiceOwners": true,
    //          "customEmails": []
    //        }
    //      }
    //    },
    //    {
    //      "apiVersion": "2014-04-01",
    //      "name": "[concat('insights-', parameters('webSiteName'))]",
    //      "type": "Microsoft.Insights/components",
    //      "location": "[resourceGroup().location]",
    //      "dependsOn": [
    //        "[resourceId('Microsoft.Web/sites/', parameters('webSiteName'))]"
    //      ],
    //      "tags": {
    //        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('webSiteName'))]": "Resource",
    //        "displayName": "AppInsightsComponent"
    //      },
    //      "properties": {
    //        "ApplicationId": "[parameters('webSiteName')]"
    //      }
    //    },
    {
      "type": "Microsoft.Web/serverfarms",
      "sku": {
        "name": "[parameters('skuName')]",
        "capacity": "[parameters('skuCapacity')]"
      },
      "kind": "app",
      "name": "[parameters('webHostingPlanName')]",
      "apiVersion": "2016-09-01",
      "location": "[resourceGroup().location]",
      "scale": null,
      "properties": {
        "name": "[parameters('webHostingPlanName')]",
        "workerTierName": null,
        "adminSiteName": null,
        "hostingEnvironmentProfile": null,
        "perSiteScaling": false,
        "reserved": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Web/sites",
      "kind": "app",
      "name": "[parameters('webSiteName')]",
      "apiVersion": "2016-08-01",
      "location": "[resourceGroup().location]",
      "scale": null,
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(parameters('webSiteName'),'.azurewebsites.net')]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Standard"
          },
          {
            "name": "[concat(parameters('webSiteName'),'.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('webHostingPlanName'))]",
        "reserved": false,
        "siteConfig": null,
        "scmSiteAlsoStopped": false,
        "hostingEnvironmentProfile": null,
        "clientAffinityEnabled": true,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "cloningInfo": null,
        "httpsOnly": false,
        "DBConnection": {
          "value": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', parameters('sqlserverName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', parameters('databaseName'), ';User Id=', parameters('sqlAdministratorLogin'), '@', reference(concat('Microsoft.Sql/servers/', parameters('sqlserverName'))).fullyQualifiedDomainName, ';Password=', parameters('sqlAdministratorLoginPassword'), ';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;ConnectRetryCount=10;')]",
          "type": "SQLAzure"
        },
        //"Storage": {
        //  "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')),'2018-07-01').keys[0].value)]",
        //  "type": "Custom"
        //},
        "appSettings": [
          {
            "name": "AppSettings:CustomVisionPredictionKey",
            "value": "[listKeys(parameters('namePrediction'),'2016-02-01-preview').key1]"
          },
          {
            "name": "AppSettings:CustomVisionPredictionId",
            "value": "[variables('CustomVisionPredictionId')]"
          },
          {
            "name": "AppSettings:CustomVisionProjectId",
            "value": "[parameters('CustomVisionProjectId')]"
          },
          {
            "name": "AppSettings:CustomVisionTrainingKey",
            "value": "[listKeys(parameters('nameTraining'),'2016-02-01-preview').key1]"
          },
          {
            "name": "AppSettings:CustomVisionEndpoint",
            "value": "[reference(parameters('namePrediction'),'2016-02-01-preview').endpoint]"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('webHostingPlanName'))]",
        "[resourceId('Microsoft.Sql/servers/databases', parameters('sqlserverName'), parameters('databaseName'))]",
        "[resourceId('Microsoft.CognitiveServices/accounts', parameters('namePrediction'))]",
        "[resourceId('Microsoft.CognitiveServices/accounts', parameters('nameTraining'))]" //,
        //"[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Sql/servers",
      "kind": "v12.0",
      "name": "[parameters('sqlserverName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "scale": null,
      "properties": {
        "administratorLogin": "[parameters('sqlAdministratorLogin')]",
        "administratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]",
        "version": "12.0"
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Sql/servers/databases",
      "sku": {
        "name": "Basic",
        "tier": "Basic"
      },
      "kind": "v12.0,user",
      "name": "[concat(parameters('sqlserverName'), '/', parameters('databaseName'))]",
      "apiVersion": "2017-03-01-preview",
      "location": "[resourceGroup().location]",
      "scale": null,
      "properties": {
        "collation": "SQL_Latin1_General_CP1_CI_AS",
        "maxSizeBytes": 104857600,
        "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
        "zoneRedundant": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('sqlserverName'))]"
      ]
    },
    {
      "apiVersion": "2016-02-01-preview",
      "name": "[parameters('nameTraining')]",
      "type": "Microsoft.CognitiveServices/accounts",
      "location": "[resourceGroup().location]",
      "kind": "CustomVision.Training",
      "sku": {
        "name": "[parameters('skuTraining')]"
      },
      "properties": {}
    },
    {
      "apiVersion": "2016-02-01-preview",
      "name": "[parameters('namePrediction')]",
      "type": "Microsoft.CognitiveServices/accounts",
      "location": "[resourceGroup().location]",
      "kind": "CustomVision.Prediction",
      "sku": {
        "name": "[parameters('skuPrediction')]"
      },
      "properties": {}
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('functionStorageAccountName')]",
      "apiVersion": "2016-12-01",
      "location": "[resourceGroup().location]",
      "kind": "Storage",
      "sku": {
        "name": "[parameters('functionStorageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2015-04-01",
      "name": "[variables('functionsHostingPlanName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[variables('functionsHostingPlanName')]",
        "computeMode": "Dynamic",
        "sku": "Dynamic"
      }
    },
    {
      "apiVersion": "2015-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[parameters('functionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('functionsHostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('functionStorageAccountName'))]",
        "[resourceId('Microsoft.Sql/servers/databases', parameters('sqlserverName'), parameters('databaseName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('functionsHostingPlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('functionStorageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('functionStorageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('functionStorageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('functionStorageAccountName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "2.0.12342.0"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "8.11.1"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components/', variables('functionApplicationInsightsName')), '2015-05-01').InstrumentationKey]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet"
            },
            {
              "name": "DBConnection",
              "value": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', parameters('sqlserverName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', parameters('databaseName'), ';User Id=', parameters('sqlAdministratorLogin'), '@', reference(concat('Microsoft.Sql/servers/', parameters('sqlserverName'))).fullyQualifiedDomainName, ';Password=', parameters('sqlAdministratorLoginPassword'), ';', 'MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;ConnectRetryCount=10;')]"
            },
            {
              "name": "CustomVisionPredictionKey",
              "value": "[listKeys(parameters('namePrediction'),'2016-02-01-preview').key1]"
            },
            {
              "name": "CustomVisionPredictionId",
              "value": "[variables('CustomVisionPredictionId')]"
            },
            {
              "name": "CustomVisionProjectId",
              "value": "[parameters('CustomVisionProjectId')]"
            },
            {
              "name": "CustomVisionTrainingKey",
              "value": "[listKeys(parameters('nameTraining'),'2016-02-01-preview').key1]"
            },
            {
              "name": "CustomVisionEndpoint",
              "value": "[reference(parameters('namePrediction'),'2016-02-01-preview').endpoint]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2015-05-01",
      "name": "[variables('functionApplicationInsightsName')]",
      "type": "microsoft.insights/components",
      "location": "[resourceGroup().location]",
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('functionApplicationInsightsName'))]": "Resource"
      },
      "properties": {
        "ApplicationId": "[variables('functionApplicationInsightsName')]",
        "Request_Source": "IbizaWebAppExtensionCreate",
        "DataVolumeCap": {
          "Cap": "[float('0.05')]"
        }
      }
    }
  ]
}